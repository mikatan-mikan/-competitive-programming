import sys

sys.setrecursionlimit(10**9)

n = int(input())

m = [["." for _ in range(3 ** n)] for _ in range(3 ** n)]

def make(s,e,n):
    global m
    if n == 1:
        for i in range(s[0],e[0]+1):
            for j in range(s[1],e[1]+1):
                m[i][j] = "#"
                #真ん中だけ"."
                if i == (s[0] + e[0]) // 2 and j == (s[1] + e[1]) // 2:
                    m[i][j] = "."
        return
    #左上
    make([s[0],s[1]],[(e[0] - s[0]) // 3 + s[0],(e[1] - s[1]) // 3 + s[1]],n - 1)
    #右上
    make([s[0],(e[1] - s[1]) // 3 * 2 + s[1]],[(e[0] - s[0]) // 3 + s[0],(e[1] - s[1]) + s[1]],n - 1)
    #左下
    make([(e[0] - s[0]) // 3 * 2 + s[0],s[1]],[(e[0] - s[0]) + s[0],(e[1] - s[1]) // 3 + s[1]],n - 1)
    #右下
    make([(e[0] - s[0]) // 3 * 2 + s[0],(e[1] - s[1]) // 3 * 2 + s[1]],[(e[0] - s[0]) + s[0],(e[1] - s[1]) + s[1]],n - 1)
    make([(e[0] - s[0]) // 3 + s[0],(e[1] - s[1]) // 3 + s[1]],[(e[0] - s[0]) // 3 * 2 + s[0],(e[1] - s[1]) // 3 * 2 + s[1]],n - 1)
    make([(e[0] - s[0]) // 3 + s[0],(e[1] - s[1]) // 3 * 2 + s[1]],[(e[0] - s[0]) // 3 * 2 + s[0],(e[1] - s[1]) + s[1]],n - 1)
    make([(e[0] - s[0]) // 3 * 2 + s[0],(e[1] - s[1]) // 3 + s[1]],[(e[0] - s[0]) + s[0],(e[1] - s[1]) // 3 * 2 + s[1]],n - 1)

    make([(e[0] - s[0]) // 3 * 2 + s[0],(e[1] - s[1]) // 3 * 2 + s[1]],[(e[0] - s[0]) + s[0],(e[1] - s[1]) + s[1]],n - 1)


    for i in range(s//3,2 * e//3 + 1):
        for j in range(s//3,2 * e//3 + 1):
            m[i][j] = "."




make([0,0],[3**n - 1,3**n - 1],n)

print(*m,sep = "\n")